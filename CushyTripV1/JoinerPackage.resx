<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>